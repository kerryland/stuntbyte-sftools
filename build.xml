<project name="salesfarce IDE" default="compile" basedir="." xmlns:sf="antlib:com.salesforce">

    <tstamp>
        <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
    </tstamp>


    <taskdef resource="proguard/ant/task.properties"
             classpath="lib/proguard.jar" />

    <property file="local.build.properties"/>
    <property file="build.properties"/>
    <property environment="env"/>


    <target name="edit" depends="tag" description="Edit your code">
        <exec executable="${vim}">

            <!--<arg line='-c "set enc=utf-8" -c "set makeprg=ant\ farcemake\ -Dsrcfile=%" -c "set errorformat=%f>%l:%c:%t:%n:%m"'/>-->

            <!-- <arg line='-c "set enc=utf-8" -c "set makeprg=java\ -cp\ lib/ant-salesforce.jar;classes\ com.fidelma.salesforce.ide.SalesfarceIDE\ %" -c "set errorformat=%f>%l:%c:%t:%n:%m"'/> -->
            <arg line='-u vimrc README.TXT'/>

        </exec>
    </target>


    <target name="test" depends="compile" description="Run unit tests">
        <javac srcdir="tests"
               destdir="tmp/classes"
               debug="on">
            <classpath>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement path="classes"/>
            </classpath>
        </javac>


        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <pathelement location="${outputfile}"/>
                <fileset dir="lib">
                    <!--<include name="**/*.jar"/>-->
                    <include name="**/junit-4.10.jar"/>

                </fileset>
                <pathelement path="tmp/classes"/>
                <pathelement path="classes"/>
            </classpath>

            <formatter type="plain"/>

            <batchtest fork="yes" todir="tmp">
                <fileset dir="tests">
                    <include name="**/*Tests.java"/>
                    <exclude name="**/AllTests.java"/>
                    <exclude name="**/LicenceServiceTests.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>


    <target name="compile" description="Compile farce.ide">
        <delete dir="classes"/>

        <mkdir dir="classes"/>
        <javac srcdir="src"
               destdir="classes"
               debug="on">
            <!--<classpath location="lib/ant-salesforce.jar"/>-->
            <classpath location="lib/wsc-22.jar"/>
            <classpath location="lib/partner.jar"/>
            <classpath location="lib/metadata.jar"/>
            <classpath location="lib/apex.jar"/>
            <classpath location="lib/hibernate3.jar"/>
            <classpath location="lib/mvel2-2.1.Beta7.jar"/>
            <!-- <classpath location="lib/mvel2-2.0.19.jar"/ -->

            <!--<classpath location="lib/wsc-20-partner-21-java-5.jar"/>-->
            <!--<classpath location="lib/force-metadata-jdbc-driver-2.0.jar"/>-->
        </javac>

        <manifest file="MANIFEST.MF">
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Built-Date" value="${TODAY}"/>
        </manifest>

        <jar destfile="${outputfile}" manifest="MANIFEST.MF">
            <fileset dir="classes">
                <include name="**/*"/>
                <exclude name="**/KeyGen.class"/>
            </fileset>
            <zipfileset src="lib/wsc-22.jar">
                <include name="**/*.class"/>
                <exclude name="org/mozilla/**/*"/>
                <exclude name="com/google/gson/**/*"/>

            </zipfileset>
            <zipfileset includes="**/*.class" src="lib/partner.jar"/>
            <zipfileset includes="**/*.class" src="lib/metadata.jar"/>
            <zipfileset includes="**/*.class" src="lib/apex.jar"/>
            <zipfileset includes="**/*.class" src="lib/mvel2-2.1.Beta7.jar"/>


            <!--<zipfileset includes="**/*.class" src="lib/ant-salesforce.jar"/>-->
            <!--<zipfileset includes="**/*.class" src="lib/wsc-20-partner-21-java-5.jar"/>-->
            <!--<zipfileset includes="**/*.class" src="lib/force-metadata-jdbc-driver-2.0.jar"/>-->
            <!--
            <manifest>
              <attribute name="Main-Class"
                    value="com.acme.checksites.Main"/>
            </manifest>
            -->
        </jar>

    </target>




    <target name="proguard" description="Opfuscates Code">

        <proguard>
            -libraryjars ${java.home}/lib/rt.jar
            -libraryjars ${java.home}/lib/jce.jar
            -libraryjars lib/wsc-22.jar
            <!---libraryjars lib/partner.jar-->
            <!---libraryjars lib/metadata.jar-->
            <!---libraryjars lib/apex.jar-->
            -libraryjars lib/hibernate3.jar
            -libraryjars lib/h2-1.3.154.jar
            <!---libraryjars lib/mvel2-2.1.Beta7.jar-->

            -keep class org.mvel2.integration.PropertyHandlerFactory { *; }
            <!---keep class org.mvel2.** { *; }-->

            <!-- TODO: Try bringing in Rhino and Google jars -->
            <!---keep class com.sforce.** { *; }-->

            <!---keep class com.sforce.**.*Enum { *; }-->
            <!---keep class com.sforce.ws.ConnectionException { *; }-->
            <!---keep class com.sforce.ws.types.Time { *; }-->
            <!---keep class com.sforce.ws.util.Base64 { *; }-->
            <!---keep class com.sforce.ws.ConnectorConfig { *; }-->
            <!---keep class com.sforce.ws.parser.XmlInputStream { *; }-->
            <!---keep class com.sforce.ws.parser.XmlOutputStream { *; }-->
            <!---keep class com.sforce.ws.wsdl.Constants { *; }-->
            <!---keep class com.sforce.ws.wsdl.Restriction { *; }-->
            <!---keep class com.sforce.ws.wsdl.SfdcApiType { *; }-->
            <!---keep class com.sforce.ws.wsdl.SimpleType { *; }-->
            <!---keep class com.sforce.ws.wsdl.Types { *; }-->
            <!---keep class com.sforce.soap.partner.SoapType { *; }-->



            <!---keep public class com.fidelma.salesforce.jdbc.hibernate.**-->

            <!---keep class * implements java.sql.**-->

            -keep class com.sforce.soap.**
            -keep public enum * { *; }

            -keep class * implements java.sql.Driver

            -injars      ${outputfile}
            -outjars     pro-${outputfile}

            -printmapping proguard.map
            -renamesourcefileattribute SourceFile
            -keepattributes SourceFile,LineNumberTable
            <!---dontskipnonpubliclibraryclassmembers-->
            -optimizationpasses 3
            -flattenpackagehierarchy com.fidelma

        </proguard>

        <copyfile src="pro-${outputfile}" dest="${outputfile}"/>


    </target>

    <!--<target name="farcemake" description="Compile (and perhaps test) Apex code">-->
    <!--<java classname="com.fidelma.salesforce.ide.SalesfarceIDE">-->
    <!--<arg value="${srcfile}"/>-->
    <!--
        <classpath>
            <pathelement location="dist/test.jar"/>
            <pathelement path="${java.class.path}"/>
        </classpath>
    -->
    <!--</java>-->
    <!---->
    <!--</target>-->


    <!-- Retrieve an unpackaged set of metadata from your org -->
    <!-- The file unpackaged/package.xml lists what is to be retrieved -->
    <target name="download" description="Download your Apex code and Triggers">
        <mkdir dir="${src.dir}"/>
        <!--Retrieve the contents into another directory-->
        <sf:retrieve username="${sf.username}"
                     password="${sf.password}"
                     serverurl="${sf.serverurl}"
                     retrieveTarget="${src.dir}"
                     unpackaged="${src.dir}/package.xml"/>
    </target>

    <target name="bulkRetrieve">
        <sf:bulkRetrieve username="${sf.username}"
                         password="${sf.password}"
                         serverurl="${sf.serverurl}"
                         metadataType="CustomObject"
                         retrieveTarget="${src.dir}"/>

        <sf:bulkRetrieve username="${sf.username}"
                         password="${sf.password}"
                         serverurl="${sf.serverurl}"
                         metadataType="ApexClass"
                         retrieveTarget="${src.dir}"/>

        <sf:bulkRetrieve username="${sf.username}"
                         password="${sf.password}"
                         serverurl="${sf.serverurl}"
                         metadataType="ApexTrigger"
                         retrieveTarget="${src.dir}"/>

        <sf:bulkRetrieve username="${sf.username}"
                         password="${sf.password}"
                         serverurl="${sf.serverurl}"
                         metadataType="ApexPage"
                         retrieveTarget="${src.dir}"/>

        <sf:bulkRetrieve username="${sf.username}"
                         password="${sf.password}"
                         serverurl="${sf.serverurl}"
                         metadataType="ApexComponent"
                         retrieveTarget="${src.dir}"/>

    </target>


    <target name="tag" description="Parse your code and create tag file">
        <exec executable="${ctags}">
            <arg value="--extra=+f"/>
            <arg value="--langmap=java:.cls.trigger"/>
            <arg value="--recurse=yes"/>
            <arg value="${src.dir}"/>
        </exec>
    </target>

</project>
